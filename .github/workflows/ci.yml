name: CI
env:
  COMMAND_TEST: 'pnpm lint'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -ieo pipefail {0}
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  initial:
    name: Initial
    timeout-minutes: 15
    runs-on: ubuntu-latest

  test:
    name: Test
    timeout-minutes: 15
    runs-on: [self-hosted, ct-runners]
    if: github.event_name == 'pull_request'
    needs: initial
    env:
      INITIAL_OUTPUT: ${{ needs.initial.outputs.INITIAL_OUTPUT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

  build:
    name: Build and Dockerize
    timeout-minutes: 15
    runs-on: [self-hosted, ct-runners]
    if: github.event_name == 'push'
    needs: initial
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Setup build cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build

      - name: Dockerize
        run: |
          runner_utils
          docker build -t $DOCKER_IMAGE .
          docker images --format "{{.Repository}}:{{.Tag}} {{.Size}}" | grep $DOCKER_IMAGE
          docker push $DOCKER_IMAGE
